---
import PageLayout from "../layouts/PageLayout.astro";
import Hero from "../components/sections/PageHero.astro";
import BodySection from "../components/sections/BodySection.astro";
import * as ServicesMeta from '../data/MarkDown/Services.md';
import SelectCard from "../components/SelectCard.jsx";
import type { MarkdownInstance } from "astro";
import enviroment from "../data/Enviroment.json";

interface Frontmatter {
	title: string;
}

const cardInfos = import.meta.glob<MarkdownInstance<Frontmatter>>('../data/MarkDown/ServiceCards/*.md');
const cardDetails = await Promise.all(
	Object.values(cardInfos).map( async (fn) => {
		const file = await fn();
		return{
			...file,
			rawText: file.rawContent(),
		}
	})
);

const rootPath = enviroment.PublicRoot;
---

<PageLayout title={ServicesMeta.frontmatter.title} description={ServicesMeta.frontmatter.description} linkMask={[false, false, true, false]}>
	<Hero heading="Services" description="what I offer for the community"/>
	<BodySection title="Have any questions?" buttonText="Contact Me!" link="/Contact">
		<section class="section">
			<div class="container card-container">
				<div class="slide-up-page-effect">
					<SelectCard title="BUSINESS INFORMATION" client:load>
						<div class="schedule-container">
							<div class="description-container">
								<span class="schedule-category">Days:</span>
								<span class="schedule-text">Monday - Wednesday</span>
								<span class="schedule-text">Thursday & Friday</span>
							</div>
							<div class="description-container time-container">
								<span class="schedule-category">Times:</span>
								<span class="schedule-text">8:00AM - 4:30PM</span>
								<span class="schedule-text">Consultations Only</span>
							</div>
						</div>
						<div class="notice-container">
							<span class="notice-text">Prices are quoted upon <a class="notice-text" href={`${rootPath}/Contact`}>inquiry</a>!</span>
						</div>
					</SelectCard>
				</div>
				{
					cardDetails.map((card) => (
						<div class="slide-up-page-effect">
							<SelectCard title={card.frontmatter.title} client:load>
								<p class="card-text">{card.rawText}</p>
							</SelectCard>
						</div>
					))
				}
			</div>
		</section>
	</BodySection>
</PageLayout>


<style>

	.card-container{
		display: flex;
		flex-direction: column;
		gap: 3rem;
		margin-bottom: 5rem;
	}

	.card-text{
		color: var(--highlight-secondary);
		font-family: var(--font-primary);
		font-size: var(--fnt-sz-32);
		font-weight: light;
		letter-spacing: var(--lt-spc-1);
		line-height: 3rem;
	}

	.schedule-container{
		display: flex;
		justify-content: center;
	}

	.description-container{
		display: flex;
		flex-direction: column;
		gap: 2rem;
		margin-left: auto;
		margin-right: auto;
	}

	.schedule-category{
		font-family: var(--font-primary);
		font-size: var(--fnt-sz-64);
		color: var(--highlight-secondary);
		font-weight: bold;
		text-align: center;
		margin-bottom: 1rem;
	}

	.schedule-text{
		font-family: var(--font-primary);
		font-size: var(--fnt-sz-32);
		color: var(--highlight-secondary);
		text-align: center;
	}

	.notice-container{
		display: flex;
		justify-content: center;
	}

	.notice-text{
		font-family: var(--font-secondary);
		font-size: var(--fnt-sz-32);
		color: var(--highlight-secondary);
		margin-top: 3rem;
	}

	a{
		text-decoration: 3px underline var(--accent-primary);
	}

	@media (max-width: 850px)
	{
		.card-text{
			font-size: var(--fnt-sz-20);
			line-height: 1.875rem;
		}

		.schedule-container{
			flex-direction: column;
			gap: .1rem;
		}

		.schedule-category{
			margin-bottom: 0rem;
			font-size: var(--fnt-sz-28);
		}

		.time-container{
			margin-top: 1rem;
		}

		.schedule-text{
			font-size: var(--fnt-sz-24);
		}

		.notice-text{
			font-size: var(--fnt-sz-20);
		}
	}

</style>